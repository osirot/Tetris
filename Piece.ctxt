#BlueJ class context
comment0.params=r\ c\ g
comment0.target=Piece(int,\ int,\ Grid)
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ Piece\r\n
comment1.params=g
comment1.target=void\ draw(java.awt.Graphics)
comment1.text=\r\n\ Draw\ the\ piece\ on\ the\ given\ Graphics\ context\r\n
comment2.params=direction
comment2.target=void\ move(int)
comment2.text=\r\n\ Move\ the\ piece\ if\ possible\r\n\ Freeze\ the\ piece\ if\ it\ cannot\ move\ down\ anymore\r\n\ @param\ direction\ the\ direction\ to\ move\r\n\ @throws\ IllegalArgumentException\ if\ direction\ is\ not\ Square.DOWN,\ \r\n\ Square.LEFT,\ or\ Square.RIGHT\r\n
comment3.params=
comment3.target=void\ rotate()
comment3.text=\r\n\ \ null\ rotate\ method\r\n\ \ to\ be\ over\ ridden\ by\ each\ subclass\ piece\r\n
comment4.params=
comment4.target=java.awt.Point[]\ getLocations()
comment4.text=\ \r\n\ Return\ the\ (row,col)\ grid\ coordinates\ occupied\ by\ this\ Piece\r\n\ @return\ an\ Array\ of\ (row,col)\ Points\r\n
comment5.params=
comment5.target=java.awt.Color\ getColor()
comment5.text=\ \r\n\ Return\ the\ color\ of\ this\ piece\r\n
comment6.params=direction
comment6.target=boolean\ canMove(int)
comment6.text=\r\n\ Returns\ if\ this\ piece\ can\ move\ in\ the\ given\ direction\r\n\ @throws\ IllegalArgumentException\ if\ direction\ is\ not\ Square.DOWN,\ \r\n\ Square.LEFT,\ or\ Square.RIGHT\r\n
numComments=7
